//@ File (label="Input directory",style="directory") inputdir
//@ File (label="Output directory",style="directory") outputdir
//@ int(label="Channel for actin", style = "spinner") Channel_Actin
//@ int(label="Channel for mito -- select 0 if none", style = "spinner") Channel_Mito
//@ string (label="File type", choices={".tif",".czi",".nd2",".ome.tiff"}, style="listBox") Type
//@ Integer(label="crop size",value=150) cropsize
//@ Boolean (label="Morphology quantification?") morph

//Save your masks in a folder named "Masks" with -mask at the end of the file name.

//AOC-Cell_B-M_morphology.ijm
//Written by Emily Jie-Ning Yang
//ImageJ macro to quantify coherency of actin cable in yeast mother cell
//Input: multi/single channel of Z stack image. Super-resolution images are recommended.
//NEED TO SUPPLY MASK IMAGE GENERATED BY CELLPOSE!! MOTHER CELLS NEEDED TO BE SELECTED BY USER.

list = getFileList(inputdir);




for (i=0; i<list.length; i++) {
    showProgress(i+1, list.length);
    filename = inputdir + File.separator+ list[i];
    Folder_Mask = inputdir+File.separator+ "x-Masks";
    Folder_M_Bratio = outputdir +File.separator+ "0-M_Bratio";
    File.makeDirectory(Folder_M_Bratio);
    Folder_Mask = inputdir+File.separator+ "x-Masks";
    if (morph == 1) {
    Folder_Morph_M = outputdir +File.separator+ "3-morph-M";
    Folder_Morph_B = outputdir +File.separator+ "4-morph-B";
    File.makeDirectory(Folder_Morph_M);
    File.makeDirectory(Folder_Morph_B);
    }
    if(Type == ".ome.tiff" ){
    Fname_temp = File.getNameWithoutExtension(filename);
    Fname = File.getNameWithoutExtension(Fname_temp);   
    }
    else{
     Fname = File.getNameWithoutExtension(filename);   	
    	}
    print("\\Clear");
	roiManager("reset");
	roiManager("Show None");
	run("Clear Results");
	run("Collect Garbage");

    print(filename);
    print(list[i]);
    
    if (endsWith(filename, Type)) {
        setBatchMode(0);
        roiManager("reset");
        run("Bio-Formats Importer", "open=" + filename + " autoscale color_mode=Default view=Hyperstack stack_order=XYCZT");
        //run("Bio-Formats Macro Extensions");
        //Ext.openImagePlus(filename);
        
        run("Select None");
        Stack.getDimensions(width, height, ch, slices, frames);
        imagewidth = width;
        imageheight = height;
        imageZstack = slices;
        id = getImageID();
        
        
        run("Set Measurements...", "bounding redirect=None decimal=9");
		run("Measure");
		px = width / getResult("Width");
        //Create Max Proj
        selectImage(id);
        run("Z Project...", "projection=[Max Intensity]");
        max_id =getImageID();
        title = getTitle();
        

		//open related mask
		
		run("Bio-Formats Importer", "open=" +Folder_Mask +File.separator+ Fname + "-max_cp_masks.png" + " autoscale color_mode=Default view=Hyperstack stack_order=XYCZT");
		Mask = getImageID();
		run("glasbey_on_dark");
		run("Set Measurements...", "min redirect=None decimal=9");
		run("Select None");
		run("Measure");
		cellpose_ROIn = getResult("Max", 1);
		run("Clear Results");
		
		
		selectImage(max_id);
		if (Channel_Mito != 0) {
		Stack.setChannel(Channel_Mito);
		run("Enhance Contrast", "saturated=0.35");
		run("Enhance Contrast", "saturated=0.35");
		run("Enhance Contrast", "saturated=0.35");
		}
		if (Channel_Actin != 0) {
		Stack.setChannel(Channel_Actin);
		run("Enhance Contrast", "saturated=0.35");
		run("Enhance Contrast", "saturated=0.35");
		run("Enhance Contrast", "saturated=0.35");
		}
		run("Make Composite");

		run("Select None");
        Stack.getDimensions(width, height, ch, slices, frames);
        roiManager("reset");
		RoiBegin = roiManager("count");
		if (RoiBegin > 0) {
			roiManager("delete");
		}
		
		run("Labels...", "color=white font=18 show draw");
		roiManager("Show All with labels");
		selectImage(max_id);
		run("Select None");
		setTool("point");
		waitForUser("Click on the center of a cell. Add to ROI Manager (keyboard shortcut is t).\n"+
            "Repeat previous step.\n"+
            "When done click OK");
		roiManager("Save", outputdir+File.separator+Fname+"-morph-CellnumberRoiSet.zip");
		CellRoi = roiManager("count");
		MlengthArray = newArray(CellRoi);
		BlengthArray = newArray(CellRoi);
		run("Duplicate...", "use");
		run("Labels...", "color=white font=18 show draw");
		roiManager("Show All with labels");
		run("Flatten");
		saveAs("Tiff", outputdir+File.separator+"0-"+Fname+"-cells-morph-marked.tif");
		close(); close();
		
		
		for (j = 0; j < CellRoi; j++) {
			setBatchMode(0);
			roiManager("reset");
			roiManager("open", outputdir+File.separator+Fname+"-morph-CellnumberRoiSet.zip");
			selectImage(max_id);
			nCell = j+1;
			pad_nCell = IJ.pad(nCell, 3);
			roiManager("Select", j);
			Roi.getCoordinates(x, y);		
			run("Select None");
			makeRectangle(x[0]-cropsize/2, y[0]-cropsize/2, cropsize, cropsize);
			run("Duplicate...", "duplicate");
			cropmergedImage = getImageID();
		
			selectImage(Mask);
			run("Select None");
			makeRectangle(x[0]-cropsize/2, y[0]-cropsize/2, cropsize, cropsize);
			run("Duplicate...", "duplicate");
			cropMaskImage = getImageID();
			roiManager("reset");
				
			//determine mother and bud
			roiManager("reset");
			selectImage(cropmergedImage);
			run("Set... ", "zoom=200");
			selectImage(cropMaskImage);
			run("Set... ", "zoom=200");
			
			setTool("wand");
			waitForUser("Select mother cell. Press OK when you are done.");
			//run("Enlarge...", "enlarge=.1");
			run("Convex Hull");
			roiManager("Add");
			r_M = roiManager("count")-1;
			
			waitForUser("Select Bud cell. Press OK when you are done.");
			//run("Enlarge...", "enlarge=.1");
			run("Convex Hull");
			roiManager("Add");
			r_B = roiManager("count")-1;
			
			roiManager("Select", r_M);
			roiManager("Rename", "mother");
			roiManager("Select", r_B);
			roiManager("Rename", "bud");
			roiManager("Save", outputdir+File.separator+Fname+"-cell"+pad_nCell+"-mother_bud-roiset.zip");

			//// get mother length
			setBatchMode(1);
			selectImage(cropmergedImage);
			roiManager("Select", r_M);
			run("Clear Results");
			run("Set Scale...", "distance="+ px +" known=1 unit=micron");
			run("Set Measurements...", "feret's redirect=None decimal=9");
			run("Measure");
			M_length = getValue("Feret");
			print("mother length (um), "+ M_length);
			MlengthArray[j] = M_length;
			
			//// get bud length
			setBatchMode(1);
			selectImage(cropmergedImage);
			roiManager("Select", r_B);
			run("Clear Results");
			run("Set Scale...", "distance="+ px +" known=1 unit=micron");
			run("Set Measurements...", "feret's redirect=None decimal=9");
			run("Measure");
			B_length = getValue("Feret");
			print("bud length (um), "+ B_length);
			BlengthArray[j] = B_length;
			
			//// save bud/mother ratio
			BMratio = B_length / M_length;
			print("bud/mother ratio, "+ BMratio);

			//// save line measurement as a file and clear ROI manager
			selectWindow("Log");
			saveAs("Text", Folder_M_Bratio+ File.separator + Fname + "-Cell" + pad_nCell+ "-M_B-length.txt");
			print("\\Clear");

			//// append mother or bud length to one file
			if (!File.exists(Folder_M_Bratio+ File.separator + Fname + "-Mother_length-append.csv")) {
			print(M_length);
			saveAs("txt", Folder_M_Bratio+ File.separator + Fname + "-Mother_length-append.csv");
			close("Log");
			};
			else {
			File.append(M_length, Folder_M_Bratio+ File.separator + Fname + "-Mother_length-append.csv");
			print("\\Clear");
			}
			
			if (!File.exists(Folder_M_Bratio+ File.separator + Fname + "-Bud_length-append.csv")) {
			print(B_length);
			saveAs("txt", Folder_M_Bratio+ File.separator + Fname + "-Bud_length-append.csv");
			close("Log");
			};
			else {
			File.append(B_length, Folder_M_Bratio+ File.separator + Fname + "-Bud_length-append.csv");
			print("\\Clear");
			}		
			
			run("Clear Results");
			
			////Measure morphology parameters in mother cell
			run("Clear Results");
			run("Select None");
			
			
			selectImage(cropmergedImage);
			run("Set Scale...", "distance="+ px +" known=1 unit=micron");
			roiManager("Select", r_M);
			run("Set Measurements...", "area fit shape feret's redirect=None decimal=9");
			run("Measure");
			selectWindow("Results");
			saveAs("Text", Folder_Morph_M+ File.separator + Fname + "-Cell" + pad_nCell+ "-M-morph.txt");
			close("results");
			
			////Measure morphology parameters in bud cell
			run("Clear Results");
			run("Select None");
			
			selectImage(cropmergedImage);
			run("Set Scale...", "distance="+ px +" known=1 unit=micron");
			roiManager("Select", r_B);
			run("Set Measurements...", "area fit shape feret's redirect=None decimal=9");
			run("Measure");
			selectWindow("Results");
			saveAs("Text", Folder_Morph_B+ File.separator + Fname + "-Cell" + pad_nCell+ "-B-morph.txt");
			close("results");
			
			selectImage(cropmergedImage);
			close();
			selectImage(cropMaskImage);
			close();
		}
		
		//save cell length of mother & bud cell
		print("\\Clear");
		Array.print(MlengthArray);
		selectWindow("Log");
		saveAs("Text", Folder_M_Bratio+File.separator + Fname + "-Mother_length_allCells.csv");
		print("\\Clear");
		Array.print(BlengthArray);
		selectWindow("Log");
		saveAs("Text", Folder_M_Bratio+File.separator + Fname + "-Bud_length_allCells.csv");
		
		close("*");			
    }
    
}
	
			
			